
<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
   version="2.5">
  <display-name>CMS</display-name>
  	<!--add caoshiyan 2015-08-05 添加WebService接口安全认证-->
	<!-- 
		1.<http-method> 
			|-- 可选的子元素 这里不存在,表示禁止所有http方法访问相应的资源
		2.<auth-constraint> 
			|-- 单独使用
			|-- 需要和<login-config>配合使用
			|-- 如果没有该子元素,说明任何身份用户都可以访问相应的资源
				也就是说,如果没有<auth-constraint>子元素,配置实际上是不起作用的
			|-- 如果存在<auth-constraint>,但是内容为空,表示所有身份的用户都被禁止访问相应的资源
	-->
  	<security-constraint><!-- 确定应该保护的资源 -->
		<web-resource-collection>
			<web-resource-name>Simple Authenticate Web service</web-resource-name>
			<url-pattern>/services/*</url-pattern><!-- 仅适用于直接访问这些资源的客户机,不适合mvchuozhe jsp跳转的 -->
		</web-resource-collection>
		<auth-constraint><!-- 指明哪些用户具有访问权 -->
			<role-name>ws_client_auth_role</role-name>
		</auth-constraint>
	</security-constraint>
	
	<login-config><!-- 认证类型,与<auth-constraint>配合使用 -->
		<auth-method>BASIC</auth-method><!-- http规范 Base64 -->
		<realm-name>Axis Basic Authentication Area</realm-name>
	</login-config>
	<security-role>
		<role-name>ws_client_auth_role</role-name>
	</security-role>
	
  	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:shared-log4j.xml</param-value>
	</context-param>
	
	  <!-- 解决一个tomcat多个应用 启动时 ContextLoaderListener加载出错问题-->
   	<context-param>  
        <param-name>webAppRootKey</param-name>  
        <param-value>webapp.root.bas</param-value>  
    </context-param>  
	
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	
	<listener>
		<listener-class>com.hikvision.cms.base.common.listener.DeleteStatuesBySessionListener</listener-class>
	</listener>
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 跨域设置 -->
	<filter>
	  <filter-name>CorsFilter</filter-name>
	  <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
	  <init-param>
	    <param-name>cors.exposed.headers</param-name>
	    <param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
	  </init-param>
	</filter>
	<filter-mapping>
	  <filter-name>CorsFilter</filter-name>
	  <url-pattern>/home/login</url-pattern>
	</filter-mapping>
	<filter-mapping>
	  <filter-name>CorsFilter</filter-name>
	  <url-pattern>*.ttf</url-pattern>
	</filter-mapping>
	<filter-mapping>
	 <filter-name>CorsFilter</filter-name>
	  <url-pattern>*.woff</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CorsFilter</filter-name>
	  <url-pattern>*.eot</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CorsFilter</filter-name>
	  <url-pattern>*.svg</url-pattern>
	</filter-mapping>
	<!-- CAS 单点登陆 client端登陆配置开始-->
	<listener>
  		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
 	</listener>
	<filter>
		<filter-name>ThirdCASLogoutFilter</filter-name>
		<filter-class>com.hikvision.cms.base.common.cas.proxy.ThirdSSOLogoutFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ThirdCASLogoutFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	 <filter>
		  <filter-name>CASLogoutFilter</filter-name>
		  <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
	 </filter>
	 <filter-mapping>
		  <filter-name>CASLogoutFilter</filter-name>
		  <url-pattern>/*</url-pattern>
	 </filter-mapping>
	 <filter>
		  <filter-name>CASFilter</filter-name>
		  <filter-class>com.hikvision.cms.common.web.cas.ExtAuthenticationFilter</filter-class>
		  <init-param>
			   <param-name>renew</param-name>
			   <param-value>false</param-value>
		  </init-param>
		  <!-- 登陆页url,只需要配相对路径即可,ip及port会自动从constansts.properties中获取 -->
		  <init-param>
				<param-name>casServerLoginUrl</param-name>
				<param-value>/home/login</param-value>
		  </init-param>
		  <init-param>
				<param-name>casServerIndexUrl</param-name>
				<param-value>/home/index.action</param-value>
		  </init-param>
		  <!-- 不需要过滤的url路径配置 -->
		  <init-param>
		  	<param-name>casNotFilterUrlSuffix</param-name>
		  	<param-value>
				home/licenseUpload.action,home/doUploadLicense.action,home/licenseChange.action,
		  		home/licenseUploadRedirect.action,home/licenseCheck.action,home/firstUseSet.action,home/doFirstUseSet.action,
		  		userOper/findUserWithRoles.action,userOper/changePassword.action,home/findUserTypeByName.action,
		  		home/findAvailableSubSystems.action,sysConfig/getVersionInfo.action,netZone/findSubSystemNetZoneByRemoteAddr.action, 
		  		roleOper/findRolesByRoleIds.action,home/user_show_dialog.action,home/head_data.action,home/license_dialog.action,index.action,
		  		home/404,home/405,home/500,home/locationIndex.action,home/corsconver.action,home/emp_head_data.action,home/esmp_head_data.action
		  		,home/rmp_head_data.action,sysConfig/isFirstUseCrossDomain.action,netZone/findSubSystemNetZoneByRemoteAddrByUrl.action,
		  		home/ssoLogin.action,home/ssoTokenKey.action,sysConfig/isFirstUse.action,home/userLocked.action,home/chooseCAS.action,common/requestPage.action,sysConfig/saveCsCookie.action,
		  		home/getOfflineFile.action,netZone/findSubSystemNetZoneByBaseIpAndSubSystem.action,logoCustom/getCurrentSkin.action,sysConfig/hasLogined.action,sysConfig/getOcxConfig.action,sysConfig/saveOcxTypeCooike.action
		  	</param-value>
		  </init-param>
	 </filter>
	 <filter-mapping>
		  <filter-name>CASFilter</filter-name>
		  <url-pattern>*.action</url-pattern>
	 </filter-mapping>
	 <filter-mapping>
		  <filter-name>CASFilter</filter-name>
		  <url-pattern>/proxool</url-pattern>
	 </filter-mapping>
	 <filter>
		  <filter-name>CASValidationFilter</filter-name>
		  <filter-class>com.hikvision.cms.common.web.cas.ExtCas20ProxyReceivingTicketValidationFilter</filter-class>
		  <init-param>
		   <param-name>errorUrl</param-name>
		   <param-value>/error.jsp</param-value>
		  </init-param>
		  <init-param>
		   <param-name>encoding</param-name>
		   <param-value>UTF-8</param-value>
		  </init-param>
	 </filter>
	 <filter-mapping>
	  <filter-name>CASValidationFilter</filter-name>
	  <url-pattern>*.action</url-pattern>
	 </filter-mapping>
	 <!-- CAS 单点登陆 client登出配置结束 -->
	 
	<servlet>
		  <servlet-name>domainServlet</servlet-name>
		  <servlet-class>com.hikvision.cms.base.common.servlet.MutiDomainServlet</servlet-class>
 	</servlet>
	 <servlet-mapping>
		  <servlet-name>domainServlet</servlet-name>
		  <url-pattern>/servlet/domainServlet</url-pattern>
	 </servlet-mapping>
	<!-- CAS SSO 单点登陆server端配置开始 -->

    <!-- proxy test begin -->
	<filter>
		<filter-name>proxyCASLogin</filter-name>
		<filter-class>com.hikvision.cms.base.common.cas.proxy.ProxyLoginFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>proxyCASLogin</filter-name>
		<url-pattern>/home/login</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>proxyLogoutFilter</filter-name>
		<filter-class>com.hikvision.cms.base.common.cas.proxy.ProxyLogoutFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>proxyLogoutFilter</filter-name>
		<url-pattern>/home/logout</url-pattern>
	</filter-mapping>

	<servlet>
		  <servlet-name>casProxyLogin</servlet-name>
		  <servlet-class>com.hikvision.cms.base.common.cas.proxy.ProxyLoginServlet</servlet-class>
 	</servlet>
	 <servlet-mapping>
		  <servlet-name>casProxyLogin</servlet-name>
		  <url-pattern>/home/proxyLogin</url-pattern>
	 </servlet-mapping>
    <!-- proxy test  bate  -->
	<servlet>
		  <servlet-name>casLogin</servlet-name>
		  <servlet-class>com.hikvision.cms.base.common.cas.ExtLoginServlet</servlet-class>
 	</servlet>
	 <servlet-mapping>
		  <servlet-name>casLogin</servlet-name>
		  <url-pattern>/home/login</url-pattern>
	 </servlet-mapping>
	 <servlet>
		  <servlet-name>serviceValidate</servlet-name>
		  <servlet-class>com.hikvision.ivms6.cms.module.cas.web.ServiceValidateServlet</servlet-class>
	 </servlet>
	 <servlet-mapping>
		  <servlet-name>serviceValidate</servlet-name>
		  <url-pattern>/serviceValidate</url-pattern>
	 </servlet-mapping>
	 
	 <servlet>
	  	<servlet-name>casLogout</servlet-name>
	  	<servlet-class>com.hikvision.cms.base.common.cas.servlet.LogoutServlet</servlet-class>
	 </servlet>
 	<servlet-mapping>
	  <servlet-name>casLogout</servlet-name>
	  <url-pattern>/home/logout</url-pattern>
 	</servlet-mapping>
	<!-- CAS SSO 单点登陆server端配置结束 -->

	<!-- http请求过滤 ，该过滤器要在cas的过滤器之后，以免影响cas的登入登出功能-->
	<filter>
		<filter-name>httpsFilter</filter-name>
		<filter-class>com.hikvision.cms.common.web.filter.HttpsProtocolAdapterFilter</filter-class>
		<init-param>
			<param-name>httpsNotFilterUrl</param-name>
			<param-value>
				/sysConfig/saveCsCookie.action,/upload/photo,/faceDatabase,/api/serviceApi,/home/user_show_dialog.action,/home/license_dialog.action,/home/head_data.action,/servlet/domainServlet,/serviceValidate,/services/BaseServiceForMag,/eps/services/IWsEpsService,/services/IWsBaseService
			</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>httpsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<listener>
		<listener-class>com.hikvision.cms.base.common.listener.CasInitListener</listener-class>
	</listener>
 	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:application-context-*.xml
			classpath:springbeans/*-beans.xml
			classpath:spring-bean-ref.xml
			classpath:springmvc-servlet.xml
			${cas-xml}
		</param-value>
	</context-param>

    <listener>
    	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
    	<listener-class>com.hikvision.cms.base.common.listener.WebContextLoaderListener</listener-class>
    </listener>
	
	<!-- Hibernate Open Session In View filter-->
    <filter>
        <filter-name>osivFilter</filter-name>
        <filter-class>
            org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
        </filter-class>
        <init-param>
            <param-name>flushMode</param-name>  
            <param-value>AUTO</param-value>  
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>osivFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!-- 配置proxool监控  -->
    <servlet>
  		<servlet-name>proxool</servlet-name>
  		<servlet-class>org.logicalcobwebs.proxool.admin.servlet.AdminServlet</servlet-class>
 	</servlet>
 	<servlet-mapping>
  		<servlet-name>proxool</servlet-name>
  		<url-pattern>/proxool</url-pattern>
 	</servlet-mapping>
    
    <filter>
    	<filter-name>HttpServiceRequestFilter</filter-name>
    	<filter-class>com.hikvision.cms.common.web.filter.HttpServletRequestBodyReaderWrapperFilter</filter-class>
    </filter>
    <filter-mapping>
    	<filter-name>HttpServiceRequestFilter</filter-name>
    	<url-pattern>/api/*</url-pattern>
    </filter-mapping>
    
    <filter>
    	<filter-name>ForbiddenInjectionFilter</filter-name>
    	<filter-class>com.hikvision.cms.common.web.filter.ForbiddenInjectionFilter</filter-class>
    </filter>
    <filter-mapping>
    	<filter-name>ForbiddenInjectionFilter</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!-- 
    <filter-mapping>
    	<filter-name>HttpServiceRequestFilter</filter-name>
    	<url-pattern>/services/*</url-pattern>
    </filter-mapping>    
     -->
    <servlet>
		  <servlet-name>validateCode</servlet-name>
		  <servlet-class>com.hikvision.cms.base.common.servlet.ValidateCodeServlet</servlet-class>
 	</servlet>
	 <servlet-mapping>
		  <servlet-name>validateCode</servlet-name>
		  <url-pattern>/vCodeImag</url-pattern>
	 </servlet-mapping>
    <servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				classpath*:springmvc-servlet.xml
			</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/api/*</url-pattern>
	</servlet-mapping>
	
     <servlet>
        <servlet-name>AxisServlet</servlet-name>
        <servlet-class>org.apache.axis2.transport.http.AxisServlet</servlet-class>
        <load-on-startup>5</load-on-startup>
    </servlet>	
   	<servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>
    
     <servlet>
        <servlet-name>mspAgentServlet</servlet-name>
        <servlet-class>com.hikvision.cms.base.common.servlet.MspAgentServlet</servlet-class>
        <load-on-startup>5</load-on-startup>
    </servlet>	
   	<servlet-mapping>
        <servlet-name>mspAgentServlet</servlet-name>
        <url-pattern>/mobile/*</url-pattern>
    </servlet-mapping>
    
	<error-page>
		<error-code>404</error-code>
		<location>/home/404.action</location>
	</error-page>
		<error-page>
		<error-code>405</error-code>
		<location>/home/405.action</location>
	</error-page>
<!--  
	<error-page>
		<error-code>500</error-code>
		<location>/home/500.action</location>
	</error-page>
	-->
	<welcome-file-list>
		<welcome-file>/views/index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
